@Bean("restTemplateWithMutualTls")
	public RestTemplate mutualTlsRestTemplate() throws Exception {
		// Load keystore
		KeyStore keyStore = KeyStore.getInstance("JKS");
		try (FileInputStream keyStoreStream = new FileInputStream(keystorePath)) {
			keyStore.load(keyStoreStream, keystorePassword.toCharArray());
		}

		// Load truststore
		KeyStore trustStore = KeyStore.getInstance("JKS");
		try (FileInputStream trustStoreStream = new FileInputStream(truststorePath)) {
			trustStore.load(trustStoreStream, truststorePassword.toCharArray());
		}

		// Create SSL context with mutual authentication
		SSLContext sslContext = SSLContextBuilder.create()
										.loadKeyMaterial(keyStore, keystorePassword.toCharArray())
										.loadTrustMaterial(trustStore, null)
										.build();

		// Configure request timeouts using existing httpConfig
		RequestConfig requestConfig = RequestConfig.custom()
											  .setConnectionKeepAlive(Timeout.of(Duration.ofMillis(httpConfig.getConnectionTimeout())))
											  .setConnectionRequestTimeout(Timeout.of(Duration.ofMillis(httpConfig.getConnectionTimeout())))
											  .setResponseTimeout(Timeout.of(Duration.ofMillis(httpConfig.getSocketTimeout())))
											  .build();

		// Create SSL connection socket factory
		SSLConnectionSocketFactory sslSocketFactory = new SSLConnectionSocketFactory(
				sslContext,
				NoopHostnameVerifier.INSTANCE
		);

		// Create connection manager with SSL socket factory
		PoolingHttpClientConnectionManager connectionManager =
				PoolingHttpClientConnectionManagerBuilder.create()
						.setSSLSocketFactory(sslSocketFactory)
						.build();

		// Configure HTTP client with connection manager and request config
		CloseableHttpClient httpClient = HttpClients.custom()
												 .setConnectionManager(connectionManager)
												 .setDefaultRequestConfig(requestConfig)
												 .build();

		// Create HTTP request factory with correlation ID support
		CorrelationIdClientHttpRequestFactory requestFactory =
				new CorrelationIdClientHttpRequestFactory(httpClient, true);

		return new RestTemplate(requestFactory);
	}
